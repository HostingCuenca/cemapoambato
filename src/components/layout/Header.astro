---
// Definir las páginas actuales del sitio
const navItems = [
    { label: 'Inicio', url: '/' },
    { label: 'Servicios', url: '/servicios' },
    { label: 'Nosotros', url: '/nosotros' },
    { label: 'Testimonios', url: '/testimonios' },
    { label: 'Blog', url: '/blog' },
    { label: 'Cursos', url: '/cursos' }
];

// Obtener la ruta actual
const currentPath = Astro.url.pathname;
---

<header class="fixed w-full bg-white border-b transition-all duration-300 z-50">
    <div class="container mx-auto px-4 py-3">
        <div class="flex justify-between items-center">
            <!-- Logo CEMAPO -->
            <a href="/" class="flex items-center transition-all duration-300">
                <img src="/CEMAPO-LOGO.png" alt="CEMAPO Talento Humano" class="h-16 object-contain transition-all duration-300" />
            </a>
            <!-- Navegación para desktop -->
            <div class="hidden md:flex items-center">
                <nav class="hidden md:flex items-center space-x-8 mr-8">
                    {navItems.map((item) => (
                        <a
                            href={item.url}
                            class:list={[
                                'font-medium transition-colors text-sm hover:text-primary-600',
                                currentPath === item.url || (item.url !== '/' && currentPath.startsWith(item.url))
                                    ? 'text-primary-600 font-semibold'
                                    : 'text-gray-700'
                            ]}
                        >
                            {item.label}
                        </a>
                    ))}
                </nav>
                <a href="/contacto" class="bg-primary-600 hover:bg-primary-700 text-white py-2 px-5 rounded-md transition-colors text-sm font-medium">
                    Contactar
                </a>
            </div>
            <!-- Botón de menú móvil -->
            <button id="menu-toggle" class="md:hidden text-gray-700 focus:outline-none" aria-label="Abrir menú móvil">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                </svg>
            </button>
        </div>
        <!-- Menú móvil -->
        <div id="mobile-menu" class="md:hidden hidden mt-4 pb-4">
            <nav class="flex flex-col space-y-4">
                {navItems.map((item) => (
                    <a 
                        href={item.url} 
                        class:list={[
                            'py-2 border-b hover:text-primary-600',
                            currentPath === item.url || (item.url !== '/' && currentPath.startsWith(item.url))
                                ? 'text-primary-600 font-semibold'
                                : 'text-gray-700'
                        ]}
                    >
                        {item.label}
                    </a>
                ))}
                <a href="/contacto" class="bg-primary-600 text-white py-2 px-4 rounded-md text-center">Contactar</a>
            </nav>
        </div>
    </div>
</header>

<style>
    @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700&display=swap');
    
    nav a {
        font-family: 'Montserrat', sans-serif;
    }
    
    header {
        transform: translateZ(0); /* Activa la aceleración por hardware */
        will-change: transform, background-color; /* Optimiza para animaciones */
        transition: transform 0.3s ease, background-color 0.3s ease, height 0.3s ease;
    }
    
    header.scrolled {
        background-color: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(4px);
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
    
    /* Comentado para eliminar el efecto de minimización
    header.scrolled img {
        height: 3rem;
    }
    */
    
    @media (max-width: 768px) {
        header {
            background-color: white;
        }
    }
</style>

<script>
    // Script para manejar el menú móvil
    const menuToggle = document.getElementById('menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (menuToggle && mobileMenu) {
        menuToggle.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
        });
    }
    
    // Script optimizado para detectar scroll y cambiar apariencia del header
    let lastScrollTop = 0;
    const header = document.querySelector('header');
    
    function handleScroll() {
        if (!header) return;
        
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        
        // Añadir clase scrolled cuando el scroll supera 50px
        if (scrollTop > 50) {
            header.classList.add('scrolled');
        } else {
            header.classList.remove('scrolled');
        }
        
        lastScrollTop = scrollTop;
    }
    
    // Usar requestAnimationFrame para optimizar el rendimiento
    let ticking = false;
    window.addEventListener('scroll', () => {
        if (!ticking) {
            window.requestAnimationFrame(() => {
                handleScroll();
                ticking = false;
            });
            ticking = true;
        }
    });
    
    // Ejecutar al cargar la página para establecer el estado inicial
    document.addEventListener('DOMContentLoaded', handleScroll);
</script>